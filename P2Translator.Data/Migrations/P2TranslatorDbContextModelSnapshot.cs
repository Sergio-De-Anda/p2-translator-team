// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using P2Translator.Data;

namespace P2Translator.Data.Migrations
{
    [DbContext(typeof(P2TranslatorDbContext))]
    partial class P2TranslatorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("Relational:Sequence:.MessageId", "'MessageId', '', '3', '1', '', '', 'Int32', 'False'");

            modelBuilder.Entity("P2Translator.Data.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"MessageId\"')");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("MessageDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("MessageId");

                    b.ToTable("Message");

                    b.HasData(
                        new
                        {
                            MessageId = 1,
                            Content = "first message",
                            MessageDateTime = new DateTime(2019, 12, 18, 14, 12, 11, 512, DateTimeKind.Local).AddTicks(750)
                        },
                        new
                        {
                            MessageId = 2,
                            Content = "second message",
                            MessageDateTime = new DateTime(2019, 12, 18, 14, 12, 11, 542, DateTimeKind.Local).AddTicks(7930)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
